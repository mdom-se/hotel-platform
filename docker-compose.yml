version: '3.4'

services:

  database:
    image: postgres:alpine3.17
    hostname: database
    networks:
      database-tier:
        aliases:
          - database.hotel.com
    environment:
      POSTGRES_USER: app-user
      POSTGRES_PASSWORD: $POSTGRES_PWD
      POSTGRES_DB: hotel-db
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app-user -d hotel-db" ]
      interval: 10s
      timeout: 5s
      retries: 6
    volumes:
      - ${DATABASE_SCRIPTS}/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  hotel-backend:
    image: hotel-backend:latest
    build:
      context: hotel-backend
    depends_on:
      database:
        condition: service_healthy
    hostname: hotel-backend
    healthcheck:
      test: "curl --fail --silent localhost:8081/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 10s
    ports:
      - '8081:8081'
    environment:
      SPRING_APPLICATION_JSON: '{
        "database.password": "$POSTGRES_PWD"
      }'
    networks:
      database-tier:
      backend-service-tier:
        aliases:
          - hotel-backend.hotel.com

  hotel-rest-api:
    image: hotel-rest-api:latest
    build:
      context: hotel-rest-api
    depends_on:
      hotel-backend:
        condition: service_healthy
    hostname: hotel-backend
    healthcheck:
      test: "curl --fail --silent localhost:8080/api/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 10s
    ports:
      - '443:8080'
    networks:
      backend-service-tier:
      rest-api-tier:
        aliases:
          - hotel-rest-api.hotel.com

networks:
  database-tier:
  rest-api-tier:
  backend-service-tier: